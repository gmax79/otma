{
	"info": {
		"_postman_id": "5ca5beab-6854-4d6d-a307-a8a20ab80125",
		"name": "Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(`\"status\":\"OK\"` );",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/health",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "Rewrite path",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/otusapp/maksim/abc",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"maksim",
						"abc"
					]
				}
			},
			"response": []
		},
		{
			"name": "Readness",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"true\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/readness",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"readness"
					]
				}
			},
			"response": []
		},
		{
			"name": "Liveness",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"true\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/liveness",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"liveness"
					]
				}
			},
			"response": []
		},
		{
			"name": "Uknown",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/some/url/request",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"some",
						"url",
						"request"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Unknown user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"No user\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/user/1",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"User created\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"a.petrov\",\n    \"firstname\": \"andrey\",\n    \"lastname\": \"petrov\",\n    \"email\": \"a.petrov@xmail.com\",\n    \"phone\": \"123-456\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/user",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"User created\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"v.ivanov\",\n    \"firstname\": \"vladimir\",\n    \"lastname\": \"ivanov\",\n    \"email\": \"v.ivanov@ymail.com\",\n    \"phone\": \"789-012\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/user",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.username).to.eql(\"a.petrov\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/user/a.petrov",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"user",
						"a.petrov"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.username).to.eql(\"v.ivanov\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/user/v.ivanov",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"user",
						"v.ivanov"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"User updated\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"andrey\",\n    \"lastname\": \"petrov\",\n    \"email\": \"a.petrov@xmail.com\",\n    \"phone\": \"000-111\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/user/a.petrov",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"user",
						"a.petrov"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User updated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.phone).to.eql(\"000-111\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/user/a.petrov",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"user",
						"a.petrov"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"User deleted\" );",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/user/a.petrov",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"user",
						"a.petrov"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"User deleted\" );",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/user/v.ivanov",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"user",
						"v.ivanov"
					]
				}
			},
			"response": []
		}
	]
}