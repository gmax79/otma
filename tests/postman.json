{
	"info": {
		"_postman_id": "5ca5beab-6854-4d6d-a307-a8a20ab80125",
		"name": "Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Url not from api",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Random api request\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/some/url/request",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"some",
						"url",
						"request"
					]
				}
			},
			"response": []
		},
		{
			"name": "Not authorized request for any name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Non authorized request\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/user/hello",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"hello"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create user petrov\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"User created\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"a.petrov\",\n    \"firstname\": \"andrey\",\n    \"lastname\": \"petrov\",\n    \"email\": \"a.petrov@xmail.com\",\n    \"phone\": \"123-456\",\n    \"password\": \"123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/create",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User without login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get user without login\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/a.petrov",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"a.petrov"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User without login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Non authorized update\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"andrey\",\n    \"lastname\": \"petrov\",\n    \"email\": \"a.petrov@xmail.com\",\n    \"phone\": \"000-111\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/a.petrov",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"a.petrov"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login with invalid password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login with invalid password\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"incorrect login or password\" );",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"a.petrov\",\n    \"password\": \"abc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login user\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"logined\" );",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"a.petrov\",\n    \"password\": \"123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update user\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"User updated\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"andrey\",\n    \"lastname\": \"petrov\",\n    \"email\": \"a.petrov@xmail.com\",\n    \"phone\": \"000-111\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/a.petrov",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"a.petrov"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check User 1 updated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check user updated\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.phone).to.eql(\"000-111\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/a.petrov",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"a.petrov"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login user\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"logout successeded\" );",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create user 2\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"User created\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"v.ivanov\",\n    \"firstname\": \"vladimir\",\n    \"lastname\": \"ivanov\",\n    \"email\": \"v.ivanov@ymail.com\",\n    \"phone\": \"789-012\",\n    \"password\": \"456\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/create",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login user 2\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"logined\" );",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"v.ivanov\",\n    \"password\": \"456\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Try Get User 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Try Get user 1\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/a.petrov",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"a.petrov"
					]
				}
			},
			"response": []
		},
		{
			"name": "Try Update User 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Try Update user 1\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"andrey\",\n    \"lastname\": \"petrov\",\n    \"email\": \"a.petrov@xmail.com\",\n    \"phone\": \"345-111\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/a.petrov",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"a.petrov"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.username).to.eql(\"v.ivanov\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/v.ivanov",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"v.ivanov"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"User deleted\" );",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/v.ivanov",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"v.ivanov"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user 1 to delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login user\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"logined\" );",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"a.petrov\",\n    \"password\": \"123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"User deleted\" );",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/a.petrov",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"a.petrov"
					]
				}
			},
			"response": []
		}
	]
}